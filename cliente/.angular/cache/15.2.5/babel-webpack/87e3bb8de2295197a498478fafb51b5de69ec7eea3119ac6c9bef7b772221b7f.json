{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"src/app/services/login.service\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"span\");\n    i0.ɵɵtext(2, \"El usuario \");\n    i0.ɵɵelementStart(3, \"strong\");\n    i0.ɵɵtext(4, \"es obligatorio\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction LoginComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"span\");\n    i0.ɵɵtext(2, \"La contrase\\u00F1a \");\n    i0.ɵɵelementStart(3, \"strong\");\n    i0.ɵɵtext(4, \"es obligatorio\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport class LoginComponent {\n  constructor(fb, router, toastr, _loginService, arouter) {\n    this.fb = fb;\n    this.router = router;\n    this.toastr = toastr;\n    this._loginService = _loginService;\n    this.arouter = arouter;\n    this.titulo = \" Login\";\n    this.listUsuarios = [];\n    this.loginForm = this.fb.group({\n      usuario: ['', Validators.required],\n      contrasena: ['', Validators.required]\n    });\n    this.id = this.arouter.snapshot.paramMap.get('id');\n  }\n  agregarUsuario() {\n    const login = {\n      usuario: this.loginForm.get('usuario')?.value,\n      contrasena: this.loginForm.get('contrasena')?.value\n    };\n    this._loginService.getLogin().subscribe({\n      next: data => {\n        this.listUsuarios = data;\n        const user = this.listUsuarios.find(u => u.usuario === login.usuario && u.contrasena === login.contrasena);\n        if (user) {\n          this.toastr.success('Ingreso correcto!');\n          // Iniciar sesión exitosa, navegar a la página de productos\n          this.router.navigate(['/producto']);\n        } else {\n          console.log('El nombre de usuario o la contraseña son incorrectos');\n        }\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.LoginService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 23,\n  vars: 4,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"row\"], [1, \"col-lg-6\", \"offset-lg-3\"], [1, \"card\"], [1, \"card-body\", \"text-center\"], [1, \"titulo\"], [1, \"mt-3\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"float-start\", \"mb-2\"], [\"type\", \"text\", \"formControlName\", \"usuario\", \"placeholder\", \"Usuario\", 1, \"form-control\", \"form-control-lm\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"contrasena\", \"placeholder\", \"Contrase\\u00F1a\", 1, \"form-control\", \"form-control-lm\"], [\"routerLink\", \"/crear-usuario\", 1, \"btn\", \"btn-secondary\", \"btn-lg\", \"float-start\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"btn-lg\", \"float-end\", 3, \"disabled\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"span\", 5);\n      i0.ɵɵtext(6, \" Login GeoAgro \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n        return ctx.agregarUsuario();\n      });\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n      i0.ɵɵtext(10, \"Usuario:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 9);\n      i0.ɵɵtemplate(12, LoginComponent_div_12_Template, 5, 0, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\", 8);\n      i0.ɵɵtext(15, \"Contrase\\u00F1a:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 11);\n      i0.ɵɵtemplate(17, LoginComponent_div_17_Template, 5, 0, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 7)(19, \"button\", 12);\n      i0.ɵɵtext(20, \"Crear usuario\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 13);\n      i0.ɵɵtext(22, \"Ingresar\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.loginForm.get(\"usuario\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx.loginForm.get(\"usuario\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"contrasena\")) == null ? null : tmp_2_0.hasError(\"required\")) && ((tmp_2_0 = ctx.loginForm.get(\"contrasena\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i5.NgIf, i2.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".text-danger[_ngcontent-%COMP%]{\\r\\n    text-align: start;\\r\\n    margin-left: 7px;\\r\\n }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGdCQUFnQjtDQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi50ZXh0LWRhbmdlcntcclxuICAgIHRleHQtYWxpZ246IHN0YXJ0O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDdweDtcclxuIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAA+BA,UAAU,QAAQ,gBAAgB;;;;;;;;;ICerCC,+BAC6F;IAClFA,2BAAY;IAAAA,8BAAQ;IAAAA,8BAAc;IAAAA,iBAAS;;;;;IAStDA,+BACmG;IACzFA,mCAAe;IAAAA,8BAAQ;IAAAA,8BAAc;IAAAA,iBAAS;;;ADhBpF,OAAM,MAAOC,cAAc;EAMzBC,YAAoBC,EAAe,EACzBC,MAAc,EACdC,MAAqB,EACrBC,aAA0B,EAC1BC,OAAuB;IAJb,OAAE,GAAFJ,EAAE;IACZ,WAAM,GAANC,MAAM;IACN,WAAM,GAANC,MAAM;IACN,kBAAa,GAAbC,aAAa;IACb,YAAO,GAAPC,OAAO;IARjB,WAAM,GAAC,QAAQ;IAGf,iBAAY,GAAW,EAAE;IAQvB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAC7BC,OAAO,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACY,QAAQ,CAAC;MAClCC,UAAU,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACY,QAAQ;KACrC,CAAE;IACH,IAAI,CAACE,EAAE,GAAG,IAAI,CAACN,OAAO,CAACO,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;EACpD;EAEAC,cAAc;IACZ,MAAMC,KAAK,GAAS;MAClBR,OAAO,EAAE,IAAI,CAACF,SAAS,CAACQ,GAAG,CAAC,SAAS,CAAC,EAAEG,KAAK;MAC7CP,UAAU,EAAE,IAAI,CAACJ,SAAS,CAACQ,GAAG,CAAC,YAAY,CAAC,EAAEG;KAC/C;IAED,IAAI,CAACb,aAAa,CAACc,QAAQ,EAAE,CAACC,SAAS,CAAC;MACtCC,IAAI,EAAEC,IAAI,IAAG;QAEX,IAAI,CAACC,YAAY,GAAED,IAAI;QACvB,MAAME,IAAI,GAAG,IAAI,CAACD,YAAY,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACjB,OAAO,KAAKQ,KAAK,CAACR,OAAO,IAAIiB,CAAC,CAACf,UAAU,KAAKM,KAAK,CAACN,UAAU,CAAC;QAC1G,IAAIa,IAAI,EAAE;UACR,IAAI,CAACpB,MAAM,CAACuB,OAAO,CAAC,mBAAmB,CAAC;UACxC;UACA,IAAI,CAACxB,MAAM,CAACyB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;SACpC,MAAM;UACLC,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;;MAEvE,CAAC;MACDC,KAAK,EAAEA,KAAK,IAAG;QACbF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACpB;KACD,CAAC;EAIF;;AA9CS/B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAgC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb3BrC,8BAA4B;MAMJA,+BACJ;MAAAA,iBAAO;MACPA,+BAA0E;MAA/BA;QAAA,OAAYsC,oBAAgB;MAAA,EAAE;MAErEtC,8BAAkB;MACkBA,yBAAQ;MAAAA,iBAAQ;MACjDA,4BAGuB;MACtBA,kEAGM;MACVA,iBAAM;MACNA,+BAAkB;MACkBA,iCAAW;MAAAA,iBAAQ;MACnDA,6BAGyB;MACzBA,kEAGM;MACVA,iBAAM;MAENA,+BAAkB;MACoEA,8BAAa;MAAAA,iBAAS;MACxGA,mCAAiG;MAAAA,yBAAQ;MAAAA,iBAAS;;;;;MA3BvGA,eAAuB;MAAvBA,yCAAuB;MASjCA,eAAyF;MAAzFA,8LAAyF;MAWzFA,eAA+F;MAA/FA,oMAA+F;MAO1EA,eAA8B;MAA9BA,gDAA8B","names":["Validators","i0","LoginComponent","constructor","fb","router","toastr","_loginService","arouter","loginForm","group","usuario","required","contrasena","id","snapshot","paramMap","get","agregarUsuario","login","value","getLogin","subscribe","next","data","listUsuarios","user","find","u","success","navigate","console","log","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Administrador\\proyectoPatron\\cliente\\src\\app\\components\\login\\login.component.ts","C:\\Users\\Administrador\\proyectoPatron\\cliente\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup,FormBuilder,Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport {Login} from 'src/app/models/login';\nimport { LoginService } from 'src/app/services/login.service';\nimport { CrearUsuarioComponent } from '../crear-usuario/crear-usuario.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm: FormGroup\n  titulo=\" Login\"\n  id:string | null\n\n  listUsuarios: Login[] =[];\n  constructor(private fb: FormBuilder, \n    private router: Router,\n    private toastr: ToastrService,\n    private _loginService:LoginService,\n    private arouter: ActivatedRoute\n    ){\n      \n    this.loginForm = this.fb.group({\n      usuario: ['', Validators.required],\n      contrasena: ['', Validators.required]\n    } )\n    this.id = this.arouter.snapshot.paramMap.get('id');\n  }\n  \n  agregarUsuario(){\n    const login: Login= {\n      usuario: this.loginForm.get('usuario')?.value,\n      contrasena: this.loginForm.get('contrasena')?.value\n    }\n\n    this._loginService.getLogin().subscribe({\n      next: data => {\n        \n        this.listUsuarios =data;\n        const user = this.listUsuarios.find(u => u.usuario === login.usuario && u.contrasena === login.contrasena);\n        if (user) {\n          this.toastr.success('Ingreso correcto!');\n          // Iniciar sesión exitosa, navegar a la página de productos\n          this.router.navigate(['/producto']);\n        } else {\n          console.log('El nombre de usuario o la contraseña son incorrectos');\n        }\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n    \n   \n    \n    }\n}\n","<div class=\"container mt-5\">\n    <div class=\"row\">\n        <div class=\"col-lg-6 offset-lg-3\">\n            <div class=\"card\">\n                <div class=\"card-body text-center\">\n                    <span class=\"titulo\">\n                        Login GeoAgro\n                    </span>\n                    <form class=\"mt-3\" [formGroup]=\"loginForm\" (ngSubmit)=\"agregarUsuario() \">\n                     \n                        <div class=\"mb-3\">\n                            <label class=\"float-start mb-2\">Usuario:</label>\n                           <input type=\"text\" \n                            formControlName=\"usuario\"\n                            class=\"form-control form-control-lm\" \n                            placeholder=\"Usuario\">\n                            <div class=\"text-danger\" \n                            *ngIf=\"loginForm.get('usuario')?.hasError('required') && loginForm.get('usuario')?.touched \">\n                                 <span>El usuario  <strong>es obligatorio</strong></span>\n                            </div>\n                        </div>\n                        <div class=\"mb-3\">\n                            <label class=\"float-start mb-2\">Contraseña:</label>\n                            <input type=\"password\" \n                            formControlName=\"contrasena\"\n                            class=\"form-control form-control-lm\" \n                            placeholder=\"Contraseña\">\n                            <div class=\"text-danger\"\n                            *ngIf=\"loginForm.get('contrasena')?.hasError('required') && loginForm.get('contrasena')?.touched \">\n                                <span>La contraseña  <strong>es obligatorio</strong></span>\n                            </div>\n                        </div>\n                        \n                        <div class=\"mb-3\">\n                            <button routerLink=\"/crear-usuario\"  class=\"btn btn-secondary btn-lg float-start\">Crear usuario</button>\n                            <button type=\"submit\" [disabled]=\"loginForm.invalid\"   class=\"btn btn-success  btn-lg float-end\">Ingresar</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}