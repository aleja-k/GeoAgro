{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet CrearProductoComponent = class CrearProductoComponent {\n  constructor(fb, router, toastr, _productoService, arouter) {\n    this.fb = fb;\n    this.router = router;\n    this.toastr = toastr;\n    this._productoService = _productoService;\n    this.arouter = arouter;\n    this.titulo = \" Login\";\n    this.loginForm = this.fb.group({\n      producto: ['', Validators.required],\n      categoria: ['', Validators.required],\n      ubicacion: ['', Validators.required],\n      precio: ['', Validators.required]\n    });\n    this.id = this.arouter.snapshot.paramMap.get('id');\n  }\n  ngOnInit() {\n    this.esEditar();\n  }\n  agregarProducto() {\n    const producto = {\n      nombre: this.productoForm.get('producto')?.value,\n      categoria: this.productoForm.get('categoria')?.value,\n      ubicacion: this.productoForm.get('ubicacion')?.value,\n      precio: this.productoForm.get('precio')?.value\n    };\n    if (this.id !== null) {\n      //editar un producto\n      this._productoService.editarProducto(this.id, producto).subscribe({\n        next: data => {\n          this.toastr.info('El producto fue actualizado con exito!', 'Producto Actualizado!');\n          this.router.navigate(['/']);\n          this.productoForm.reset();\n        },\n        error: error => {\n          console.log(error);\n          this.productoForm.reset();\n        }\n      });\n    } else {\n      //creamos el producto\n      console.log(producto);\n      this._productoService.guardarProducto(producto).subscribe({\n        next: data => {\n          this.toastr.success('El producto fue registrado con exito!', 'Producto Registrado!');\n          this.router.navigate(['/']);\n        },\n        error: error => {\n          console.log(error);\n          this.productoForm.reset();\n        }\n      });\n    }\n  }\n  esEditar() {\n    if (this.id !== null) {\n      this.titulo = \"Editar Producto\";\n      this._productoService.obtenerProducto(this.id).subscribe({\n        next: data => {\n          this.productoForm.setValue({\n            producto: data.nombre,\n            categoria: data.categoria,\n            ubicacion: data.ubicacion,\n            precio: data.precio\n          });\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    }\n  }\n};\nCrearProductoComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], CrearProductoComponent);\nexport { CrearProductoComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAA+BC,UAAU,QAAQ,gBAAgB;AAW1D,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAKjCC,YAAoBC,EAAe,EACzBC,MAAc,EACdC,MAAqB,EACrBC,gBAAgC,EAChCC,OAAuB;IAJb,OAAE,GAAFJ,EAAE;IACZ,WAAM,GAANC,MAAM;IACN,WAAM,GAANC,MAAM;IACN,qBAAgB,GAAhBC,gBAAgB;IAChB,YAAO,GAAPC,OAAO;IAPjB,WAAM,GAAC,QAAQ;IASb,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;MACnCC,SAAS,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ,CAAC;MACpCE,SAAS,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACW,QAAQ,CAAC;MACpCG,MAAM,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACW,QAAQ;KACjC,CAAE;IACH,IAAI,CAACI,EAAE,GAAG,IAAI,CAACR,OAAO,CAACS,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;EACpD;EAEAC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAC,eAAe;IACb,MAAMX,QAAQ,GAAY;MACxBY,MAAM,EAAE,IAAI,CAACC,YAAY,CAACL,GAAG,CAAC,UAAU,CAAC,EAAEM,KAAK;MAChDZ,SAAS,EAAE,IAAI,CAACW,YAAY,CAACL,GAAG,CAAC,WAAW,CAAC,EAAEM,KAAK;MACpDX,SAAS,EAAE,IAAI,CAACU,YAAY,CAACL,GAAG,CAAC,WAAW,CAAC,EAAEM,KAAK;MACpDV,MAAM,EAAC,IAAI,CAACS,YAAY,CAACL,GAAG,CAAC,QAAQ,CAAC,EAAEM;KACzC;IAED,IAAG,IAAI,CAACT,EAAE,KAAK,IAAI,EAAC;MAClB;MACA,IAAI,CAACT,gBAAgB,CAACmB,cAAc,CAAC,IAAI,CAACV,EAAE,EAACL,QAAQ,CAAC,CAACgB,SAAS,CAAC;QAC/DC,IAAI,EAAEC,IAAI,IAAG;UACX,IAAI,CAACvB,MAAM,CAACwB,IAAI,CAAC,wCAAwC,EAAE,uBAAuB,CAAC;UACnF,IAAI,CAACzB,MAAM,CAAC0B,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;UAC3B,IAAI,CAACP,YAAY,CAACQ,KAAK,EAAE;QAC3B,CAAC;QACDC,KAAK,EAAEA,KAAK,IAAG;UACbC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;UAClB,IAAI,CAACT,YAAY,CAACQ,KAAK,EAAE;QAC3B;OACD,CAAC;KACH,MAAI;MACH;MACAE,OAAO,CAACC,GAAG,CAACxB,QAAQ,CAAC;MACrB,IAAI,CAACJ,gBAAgB,CAAC6B,eAAe,CAACzB,QAAQ,CAAC,CAACgB,SAAS,CAAC;QACxDC,IAAI,EAAEC,IAAI,IAAG;UACX,IAAI,CAACvB,MAAM,CAAC+B,OAAO,CAAC,uCAAuC,EAAE,sBAAsB,CAAC;UACpF,IAAI,CAAChC,MAAM,CAAC0B,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAC7B,CAAC;QACDE,KAAK,EAAEA,KAAK,IAAG;UACbC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;UAClB,IAAI,CAACT,YAAY,CAACQ,KAAK,EAAE;QAC3B;OACD,CAAC;;EAIN;EAEAX,QAAQ;IACN,IAAG,IAAI,CAACL,EAAE,KAAK,IAAI,EAAC;MAClB,IAAI,CAACsB,MAAM,GAAG,iBAAiB;MAC/B,IAAI,CAAC/B,gBAAgB,CAACgC,eAAe,CAAC,IAAI,CAACvB,EAAE,CAAC,CAACW,SAAS,CAAC;QACvDC,IAAI,EAAEC,IAAI,IAAG;UACX,IAAI,CAACL,YAAY,CAACgB,QAAQ,CAAC;YACzB7B,QAAQ,EAAEkB,IAAI,CAACN,MAAM;YACrBV,SAAS,EAAEgB,IAAI,CAAChB,SAAS;YACzBC,SAAS,EAAEe,IAAI,CAACf,SAAS;YACzBC,MAAM,EAAEc,IAAI,CAACd;WACd,CAAC;QACJ,CAAC;QACDkB,KAAK,EAAEA,KAAK,IAAG;UACbC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QACpB;OACD,CAAC;;EAEN;CACD;AAjFY/B,sBAAsB,eALlCF,SAAS,CAAC;EACTyC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWzC,sBAAsB,CAiFlC;SAjFYA,sBAAsB","names":["Component","Validators","CrearProductoComponent","constructor","fb","router","toastr","_productoService","arouter","loginForm","group","producto","required","categoria","ubicacion","precio","id","snapshot","paramMap","get","ngOnInit","esEditar","agregarProducto","nombre","productoForm","value","editarProducto","subscribe","next","data","info","navigate","reset","error","console","log","guardarProducto","success","titulo","obtenerProducto","setValue","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Administrador\\proyectoPatron\\cliente\\src\\app\\components\\login\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup,FormBuilder,Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport {Login} from 'src/app/models/login';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class CrearProductoComponent {\n  loginForm: FormGroup\n  titulo=\" Login\"\n  id:string | null;\n\n  constructor(private fb: FormBuilder, \n    private router: Router,\n    private toastr: ToastrService,\n    private _productoService:ProductoService,\n    private arouter: ActivatedRoute\n    ){\n    this.loginForm = this.fb.group({\n      producto: ['', Validators.required],\n      categoria: ['', Validators.required],\n      ubicacion: ['', Validators.required],\n      precio: ['', Validators.required]\n    } )\n    this.id = this.arouter.snapshot.paramMap.get('id');\n  }\n\n  ngOnInit(): void{\n    this.esEditar();\n  }\n\n  agregarProducto(){\n    const producto: Producto= {\n      nombre: this.productoForm.get('producto')?.value,\n      categoria: this.productoForm.get('categoria')?.value,\n      ubicacion: this.productoForm.get('ubicacion')?.value,\n      precio:this.productoForm.get('precio')?.value\n    }\n    \n    if(this.id !== null){\n      //editar un producto\n      this._productoService.editarProducto(this.id,producto).subscribe({\n        next: data => {\n          this.toastr.info('El producto fue actualizado con exito!', 'Producto Actualizado!');\n          this.router.navigate(['/']);\n          this.productoForm.reset();\n        },\n        error: error => {\n          console.log(error);\n          this.productoForm.reset();\n        }\n      });\n    }else{\n      //creamos el producto\n      console.log(producto)\n      this._productoService.guardarProducto(producto).subscribe({\n        next: data => {\n          this.toastr.success('El producto fue registrado con exito!', 'Producto Registrado!');\n          this.router.navigate(['/']);\n        },\n        error: error => {\n          console.log(error);\n          this.productoForm.reset();\n        }\n      });\n    }\n\n    \n  }\n\n  esEditar(){\n    if(this.id !== null){\n      this.titulo = \"Editar Producto\";\n      this._productoService.obtenerProducto(this.id).subscribe({\n        next: data => {\n          this.productoForm.setValue({\n            producto: data.nombre,\n            categoria: data.categoria, \n            ubicacion: data.ubicacion, \n            precio: data.precio\n          })\n        },\n        error: error => {\n          console.log(error);\n        }\n      })\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}