{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet CrearEmpleadoComponent = class CrearEmpleadoComponent {\n  constructor(fb, router, toastr, _empleadoService, arouter) {\n    this.fb = fb;\n    this.router = router;\n    this.toastr = toastr;\n    this._empleadoService = _empleadoService;\n    this.arouter = arouter;\n    this.titulo = \" Crear Pago Empleado\";\n    this.array = [];\n    this.empleadoForm = this.fb.group({\n      nombre: ['', Validators.required],\n      apellido: ['', Validators.required],\n      kilos: [null, Validators.required],\n      descuentos: ['', Validators.required],\n      pago: ['', Validators.required]\n    });\n    this.id = this.arouter.snapshot.paramMap.get('id');\n    this.kilosCont = \"\";\n  }\n  ngOnInit() {\n    this.esEditar();\n  }\n  addValue(event) {\n    event.preventDefault();\n    this.array.push(this.empleadoForm.get('kilos')?.value);\n    this.empleadoForm.get('kilos')?.reset();\n    console.log(this.array);\n  }\n  onInput(value) {\n    // Puedes hacer lo que necesites con el valor del input aquí\n  }\n  agregarEmpleado() {\n    const empleado = {\n      nombre: this.empleadoForm.get('nombre')?.value,\n      apellido: this.empleadoForm.get('apellido')?.value,\n      kilos: this.empleadoForm.get('kilos')?.value,\n      descuentos: this.empleadoForm.get('descuentos')?.value,\n      pago: this.empleadoForm.get('pago')?.value\n    };\n    console.log(this.array);\n    if (this.id !== null) {\n      //editar un empleado\n      this._empleadoService.editarEmpleado(this.id, empleado).subscribe({\n        next: data => {\n          this.toastr.info('El empleado fue actualizado con exito!', 'Empleado Actualizado!');\n          this.router.navigate(['/']);\n          this.empleadoForm.reset();\n        },\n        error: error => {\n          console.log(error);\n          this.empleadoForm.reset();\n        }\n      });\n    } else {\n      //creamos el empleado\n      console.log(empleado);\n      this._empleadoService.guardarEmpleado(empleado).subscribe({\n        next: data => {\n          this.toastr.success('El empleado fue registrado con exito!', 'Empleado Registrado!');\n          this.router.navigate(['/']);\n        },\n        error: error => {\n          console.log(error);\n          this.empleadoForm.reset();\n        }\n      });\n    }\n  }\n  esEditar() {\n    if (this.id !== null) {\n      this.titulo = \"Editar Empleado\";\n      this._empleadoService.obtenerEmpleado(this.id).subscribe({\n        next: data => {\n          this.empleadoForm.setValue({\n            nombre: data.nombre,\n            apellido: data.apellido,\n            kilos: data.kilos,\n            descuentos: data.descuentos,\n            pago: data.pago\n          });\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    }\n  }\n};\nCrearEmpleadoComponent = __decorate([Component({\n  selector: 'app-crear-empleado',\n  templateUrl: './crear-empleado.component.html',\n  styleUrls: ['./crear-empleado.component.css']\n})], CrearEmpleadoComponent);\nexport { CrearEmpleadoComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","CrearEmpleadoComponent","constructor","fb","router","toastr","_empleadoService","arouter","empleadoForm","group","nombre","required","apellido","kilos","descuentos","pago","id","snapshot","paramMap","get","kilosCont","ngOnInit","esEditar","addValue","event","preventDefault","array","push","value","reset","console","log","onInput","agregarEmpleado","empleado","editarEmpleado","subscribe","next","data","info","navigate","error","guardarEmpleado","success","titulo","obtenerEmpleado","setValue","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Administrador\\proyectoPatron\\cliente\\src\\app\\components\\crear-empleado\\crear-empleado.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup,FormBuilder,Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport {Empleado} from 'src/app/models/empleado';\nimport { EmpleadoService } from 'src/app/services/empleado.service';\n@Component({\n  selector: 'app-crear-empleado',\n  templateUrl: './crear-empleado.component.html',\n  styleUrls: ['./crear-empleado.component.css']\n})\nexport class CrearEmpleadoComponent {\n  empleadoForm: FormGroup\n  titulo=\" Crear Pago Empleado\"\n  id:string | null;\n  kilosCont:String | null;\n\n  constructor(private fb: FormBuilder, \n    private router: Router,\n    private toastr: ToastrService,\n    private _empleadoService:EmpleadoService,\n    private arouter: ActivatedRoute\n    ){\n    this.empleadoForm = this.fb.group({\n      nombre: ['', Validators.required],\n      apellido: ['', Validators.required],\n      kilos: [null, Validators.required],\n      descuentos: ['', Validators.required],\n      pago: ['', Validators.required]\n    } )\n    this.id = this.arouter.snapshot.paramMap.get('id');\n    this.kilosCont=\"\";\n  }\n\n  ngOnInit(): void{\n    this.esEditar();\n  }\n  array: any[] = [];\n  addValue(event: any) {       \n    event.preventDefault();\n    this.array.push(this.empleadoForm.get('kilos')?.value);\n    this.empleadoForm.get('kilos')?.reset();\n    console.log(this.array)\n  }\n  onInput(value: string) {\n    // Puedes hacer lo que necesites con el valor del input aquí\n  }\n  agregarEmpleado(){\n    const empleado: Empleado= {\n      nombre: this.empleadoForm.get('nombre')?.value,\n      apellido: this.empleadoForm.get('apellido')?.value,\n      kilos: this.empleadoForm.get('kilos')?.value,\n      descuentos:this.empleadoForm.get('descuentos')?.value,\n      pago:this.empleadoForm.get('pago')?.value\n    }\n    \n    \n    console.log(this.array)\n    if(this.id !== null){\n      //editar un empleado\n      this._empleadoService.editarEmpleado(this.id,empleado).subscribe({\n        next: data => {\n          this.toastr.info('El empleado fue actualizado con exito!', 'Empleado Actualizado!');\n          this.router.navigate(['/']);\n          this.empleadoForm.reset();\n        },\n        error: error => {\n          console.log(error);\n          this.empleadoForm.reset();\n        }\n      });\n    }else{\n      //creamos el empleado\n      console.log(empleado)\n      this._empleadoService.guardarEmpleado(empleado).subscribe({\n        next: data => {\n          this.toastr.success('El empleado fue registrado con exito!', 'Empleado Registrado!');\n          this.router.navigate(['/']);\n        },\n        error: error => {\n          console.log(error);\n          this.empleadoForm.reset();\n        }\n      });\n    }\n\n    \n  }\n\n  esEditar(){\n    if(this.id !== null){\n      this.titulo = \"Editar Empleado\";\n      this._empleadoService.obtenerEmpleado(this.id).subscribe({\n        next: data => {\n          this.empleadoForm.setValue({\n            nombre: data.nombre,\n            apellido: data.apellido, \n            kilos: data.kilos, \n            descuentos: data.descuentos,\n            pago: data.pago\n          })\n        },\n        error: error => {\n          console.log(error);\n        }\n      })\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}