{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet CrearEmpleadoComponent = class CrearEmpleadoComponent {\n  constructor(fb, router, toastr, _empleadoService, arouter) {\n    this.fb = fb;\n    this.router = router;\n    this.toastr = toastr;\n    this._empleadoService = _empleadoService;\n    this.arouter = arouter;\n    this.titulo = \" Crear Pago Empleado\";\n    this.empleadoForm = this.fb.group({\n      nombre: ['', Validators.required],\n      apellido: ['', Validators.required],\n      kilos: ['', Validators.required],\n      descuentos: ['', Validators.required],\n      pago: ['', Validators.required]\n    });\n    this.id = this.arouter.snapshot.paramMap.get('id');\n  }\n  ngOnInit() {\n    this.esEditar();\n  }\n  agregarProducto() {\n    const empleado = {\n      nombre: this.empleadoForm.get('nombre')?.value,\n      apellido: this.empleadoForm.get('apellido')?.value,\n      kilos: this.empleadoForm.get('kilos')?.value,\n      descuentos: this.empleadoForm.get('descuentos')?.value,\n      pago: this.empleadoForm.get('pago')?.value\n    };\n    if (this.id !== null) {\n      //editar un empleado\n      this._empleadoService.editarProducto(this.id, producto).subscribe({\n        next: data => {\n          this.toastr.info('El producto fue actualizado con exito!', 'Producto Actualizado!');\n          this.router.navigate(['/']);\n          this.productoForm.reset();\n        },\n        error: error => {\n          console.log(error);\n          this.productoForm.reset();\n        }\n      });\n    } else {\n      //creamos el producto\n      console.log(producto);\n      this._productoService.guardarProducto(producto).subscribe({\n        next: data => {\n          this.toastr.success('El producto fue registrado con exito!', 'Producto Registrado!');\n          this.router.navigate(['/']);\n        },\n        error: error => {\n          console.log(error);\n          this.productoForm.reset();\n        }\n      });\n    }\n  }\n  esEditar() {\n    if (this.id !== null) {\n      this.titulo = \"Editar Producto\";\n      this._productoService.obtenerProducto(this.id).subscribe({\n        next: data => {\n          this.productoForm.setValue({\n            producto: data.nombre,\n            categoria: data.categoria,\n            ubicacion: data.ubicacion,\n            precio: data.precio\n          });\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    }\n  }\n};\nCrearEmpleadoComponent = __decorate([Component({\n  selector: 'app-crear-empleado',\n  templateUrl: './crear-empleado.component.html',\n  styleUrls: ['./crear-empleado.component.css']\n})], CrearEmpleadoComponent);\nexport { CrearEmpleadoComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","CrearEmpleadoComponent","constructor","fb","router","toastr","_empleadoService","arouter","empleadoForm","group","nombre","required","apellido","kilos","descuentos","pago","id","snapshot","paramMap","get","ngOnInit","esEditar","agregarProducto","empleado","value","editarProducto","producto","subscribe","next","data","info","navigate","productoForm","reset","error","console","log","_productoService","guardarProducto","success","titulo","obtenerProducto","setValue","categoria","ubicacion","precio","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Administrador\\proyectoPatron\\cliente\\src\\app\\components\\crear-empleado\\crear-empleado.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup,FormBuilder,Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport {Empleado} from 'src/app/models/empleado';\nimport { EmpleadoService } from 'src/app/services/empleado.service';\n@Component({\n  selector: 'app-crear-empleado',\n  templateUrl: './crear-empleado.component.html',\n  styleUrls: ['./crear-empleado.component.css']\n})\nexport class CrearEmpleadoComponent {\n  empleadoForm: FormGroup\n  titulo=\" Crear Pago Empleado\"\n  id:string | null;\n\n  constructor(private fb: FormBuilder, \n    private router: Router,\n    private toastr: ToastrService,\n    private _empleadoService:EmpleadoService,\n    private arouter: ActivatedRoute\n    ){\n    this.empleadoForm = this.fb.group({\n      nombre: ['', Validators.required],\n      apellido: ['', Validators.required],\n      kilos: ['', Validators.required],\n      descuentos: ['', Validators.required],\n      pago: ['', Validators.required]\n    } )\n    this.id = this.arouter.snapshot.paramMap.get('id');\n  }\n\n  ngOnInit(): void{\n    this.esEditar();\n  }\n\n  agregarProducto(){\n    const empleado: Empleado= {\n      nombre: this.empleadoForm.get('nombre')?.value,\n      apellido: this.empleadoForm.get('apellido')?.value,\n      kilos: this.empleadoForm.get('kilos')?.value,\n      descuentos:this.empleadoForm.get('descuentos')?.value,\n      pago:this.empleadoForm.get('pago')?.value\n    }\n    \n    if(this.id !== null){\n      //editar un empleado\n      this._empleadoService.editarProducto(this.id,producto).subscribe({\n        next: data => {\n          this.toastr.info('El producto fue actualizado con exito!', 'Producto Actualizado!');\n          this.router.navigate(['/']);\n          this.productoForm.reset();\n        },\n        error: error => {\n          console.log(error);\n          this.productoForm.reset();\n        }\n      });\n    }else{\n      //creamos el producto\n      console.log(producto)\n      this._productoService.guardarProducto(producto).subscribe({\n        next: data => {\n          this.toastr.success('El producto fue registrado con exito!', 'Producto Registrado!');\n          this.router.navigate(['/']);\n        },\n        error: error => {\n          console.log(error);\n          this.productoForm.reset();\n        }\n      });\n    }\n\n    \n  }\n\n  esEditar(){\n    if(this.id !== null){\n      this.titulo = \"Editar Producto\";\n      this._productoService.obtenerProducto(this.id).subscribe({\n        next: data => {\n          this.productoForm.setValue({\n            producto: data.nombre,\n            categoria: data.categoria, \n            ubicacion: data.ubicacion, \n            precio: data.precio\n          })\n        },\n        error: error => {\n          console.log(error);\n        }\n      })\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}