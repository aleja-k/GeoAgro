{"ast":null,"code":"import { Login } from 'src/app/models/login';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/login.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"span\");\n    i0.ɵɵtext(2, \"El nombre del usuario \");\n    i0.ɵɵelementStart(3, \"strong\");\n    i0.ɵɵtext(4, \"es obligatorio\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"span\");\n    i0.ɵɵtext(2, \"La contrase\\u00F1a \");\n    i0.ɵɵelementStart(3, \"strong\");\n    i0.ɵɵtext(4, \"es obligatorio\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nconst _c0 = function () {\n  return [\"/login\"];\n};\nexport class LoginComponent {\n  constructor(_loginService, toastr, fb, router, arouter) {\n    this._loginService = _loginService;\n    this.toastr = toastr;\n    this.fb = fb;\n    this.router = router;\n    this.arouter = arouter;\n    this.listUsuario = [];\n    this.loginForm = this.fb.group({\n      usuario: ['', Validators.required],\n      contrasena: ['', Validators.required]\n    });\n    this.id = this.arouter.snapshot.paramMap.get('id');\n  }\n  ngOnInit() {\n    this.obtenerUsuario();\n  }\n  obtenerUsuario() {\n    const login = {\n      usuario: this.loginForm.get('usuario')?.value,\n      contrasena: this.loginForm.get('contrasena')?.value\n    };\n    if (this.id !== null) {\n      //editar un producto\n      /*this._loginService.editarProducto(this.id,login).subscribe({\r\n        next: data => {\r\n          this.toastr.info('El producto fue actualizado con exito!', 'Producto Actualizado!');\r\n          this.router.navigate(['/']);\r\n          this.productoForm.reset();\r\n        },\r\n        error: error => {\r\n          console.log(error);\r\n          this.productoForm.reset();\r\n        }*/\n    }\n    ;\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 22,\n  vars: 5,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"row\"], [1, \"col-lg-6\", \"offset-lg-2\"], [1, \"card\"], [1, \"card-body\", \"text-center\"], [1, \"titulo\"], [1, \"mt-3\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"float-start\", \"mb-2\"], [\"type\", \"text\", \"formControlName\", \"usuario\", \"placeholder\", \"Usuario\", 1, \"form-control\", \"form-control-lm\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"categoria\", \"placeholder\", \"Categoria\", 1, \"form-control\", \"form-control-lm\"], [\"routerLink\", \"/\", 1, \"btn\", \"btn-secondary\", \"btn-lg\", \"float-start\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"btn-lg\", \"float-end\", 3, \"routerLink\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n      i0.ɵɵelement(5, \"span\", 5);\n      i0.ɵɵelementStart(6, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.obtenerUsuario();\n      });\n      i0.ɵɵelementStart(7, \"div\", 7)(8, \"label\", 8);\n      i0.ɵɵtext(9, \"Usuario:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 9);\n      i0.ɵɵtemplate(11, LoginComponent_div_11_Template, 5, 0, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 8);\n      i0.ɵɵtext(14, \"Contrase\\u00F1a:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 11);\n      i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 5, 0, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 7)(18, \"button\", 12);\n      i0.ɵɵtext(19, \"Volver\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 13);\n      i0.ɵɵtext(21, \"Ingresar\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.loginForm.get(\"usuario\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx.loginForm.get(\"usuario\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"categoria\")) == null ? null : tmp_2_0.hasError(\"required\")) && ((tmp_2_0 = ctx.loginForm.get(\"categoria\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c0));\n    }\n  },\n  dependencies: [i5.NgIf, i4.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".text-danger[_ngcontent-%COMP%]{\\r\\n    text-align: start;\\r\\n    margin-left: 7px;\\r\\n }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGdCQUFnQjtDQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi50ZXh0LWRhbmdlcntcclxuICAgIHRleHQtYWxpZ246IHN0YXJ0O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDdweDtcclxuIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\n{\n  //creamos el producto\n  console.log(Login);\n  this._productoService.guardarProducto(Login).subscribe({\n    next: data => {\n      this.toastr.success('El producto fue registrado con exito!', 'Producto Registrado!');\n      this.router.navigate(['/']);\n    },\n    error: error => {\n      console.log(error);\n      this.productoForm.reset();\n    }\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,KAAK,QAAQ,sBAAsB;AAE5C,SAA+BC,UAAU,QAAQ,gBAAgB;;;;;;;;;ICWrCC,+BAC6F;IAClFA,sCAAuB;IAAAA,8BAAQ;IAAAA,8BAAc;IAAAA,iBAAS;;;;;IASjEA,+BACiG;IACvFA,mCAAe;IAAAA,8BAAQ;IAAAA,8BAAc;IAAAA,iBAAS;;;;;;ADfpF,OAAM,MAAOC,cAAc;EAKzBC,YACUC,aAA2B,EAC3BC,MAAoB,EACpBC,EAAe,EACfC,MAAc,EACdC,OAAuB;IAJvB,kBAAa,GAAbJ,aAAa;IACb,WAAM,GAANC,MAAM;IACN,OAAE,GAAFC,EAAE;IACF,WAAM,GAANC,MAAM;IACN,YAAO,GAAPC,OAAO;IANjB,gBAAW,GAAW,EAAE;IAQpB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC7BC,OAAO,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACY,QAAQ,CAAC;MAClCC,UAAU,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACY,QAAQ;KACrC,CAAE;IACH,IAAI,CAACE,EAAE,GAAG,IAAI,CAACN,OAAO,CAACO,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;EACpD;EAEFC,QAAQ;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAc;IACZ,MAAMC,KAAK,GAAS;MAClBT,OAAO,EAAE,IAAI,CAACF,SAAS,CAACQ,GAAG,CAAC,SAAS,CAAC,EAAEI,KAAK;MAC7CR,UAAU,EAAE,IAAI,CAACJ,SAAS,CAACQ,GAAG,CAAC,YAAY,CAAC,EAAEI;KAC/C;IAED,IAAG,IAAI,CAACP,EAAE,KAAK,IAAI,EAAC;MAClB;MACA;;;;;;;;;;IAAA;IAUE;EACJ;;AA1CSZ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ3BzB,8BAA4B;MAKRA,0BACO;MACPA,+BAA0E;MAA/BA;QAAA,OAAY0B,oBAAgB;MAAA,EAAE;MACrE1B,8BAAkB;MACkBA,wBAAQ;MAAAA,iBAAQ;MACjDA,4BAGuB;MACtBA,kEAGM;MACVA,iBAAM;MACNA,+BAAkB;MACkBA,iCAAW;MAAAA,iBAAQ;MACnDA,6BAGwB;MACxBA,kEAGM;MACVA,iBAAM;MAENA,+BAAkB;MACsDA,uBAAM;MAAAA,iBAAS;MACnFA,mCAA4F;MAAAA,yBAAQ;MAAAA,iBAAS;;;;;MA1BlGA,eAAuB;MAAvBA,yCAAuB;MAQjCA,eAAyF;MAAzFA,8LAAyF;MAWzFA,eAA6F;MAA7FA,kMAA6F;MAOtFA,eAA0B;MAA1BA,uDAA0B;;;;;;ADqBrD;EACH;EACA2B,OAAO,CAACC,GAAG,CAAC9B,KAAK,CAAC;EAClB,IAAI,CAAC+B,gBAAgB,CAACC,eAAe,CAAChC,KAAK,CAAC,CAACiC,SAAS,CAAC;IACrDC,IAAI,EAAEC,IAAI,IAAG;MACX,IAAI,CAAC7B,MAAM,CAAC8B,OAAO,CAAC,uCAAuC,EAAE,sBAAsB,CAAC;MACpF,IAAI,CAAC5B,MAAM,CAAC6B,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IACDC,KAAK,EAAEA,KAAK,IAAG;MACbT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;MAClB,IAAI,CAACC,YAAY,CAACC,KAAK,EAAE;IAC3B;GACD,CAAC","names":["Login","Validators","i0","LoginComponent","constructor","_loginService","toastr","fb","router","arouter","loginForm","group","usuario","required","contrasena","id","snapshot","paramMap","get","ngOnInit","obtenerUsuario","login","value","selectors","decls","vars","consts","template","ctx","console","log","_productoService","guardarProducto","subscribe","next","data","success","navigate","error","productoForm","reset"],"sourceRoot":"","sources":["C:\\Users\\Administrador\\proyectoPatron\\cliente\\src\\app\\components\\login\\login\\login.component.ts","C:\\Users\\Administrador\\proyectoPatron\\cliente\\src\\app\\components\\login\\login\\login.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { Login } from 'src/app/models/login';\nimport { LoginService } from 'src/app/services/login.service';\nimport { FormGroup,FormBuilder,Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup\n  id:string | null;\n\n  listUsuario: Login[] =[];\n  constructor(\n    private _loginService: LoginService,\n    private toastr:ToastrService,\n    private fb: FormBuilder, \n    private router: Router,\n    private arouter: ActivatedRoute\n    ){\n      this.loginForm = this.fb.group({\n        usuario: ['', Validators.required],\n        contrasena: ['', Validators.required]\n      } )\n      this.id = this.arouter.snapshot.paramMap.get('id');\n    }\n  \n  ngOnInit(): void{\n    this.obtenerUsuario();\n  }\n  \n  obtenerUsuario(){\n    const login: Login= {\n      usuario: this.loginForm.get('usuario')?.value,\n      contrasena: this.loginForm.get('contrasena')?.value\n    }\n    \n    if(this.id !== null){\n      //editar un producto\n      /*this._loginService.editarProducto(this.id,login).subscribe({\n        next: data => {\n          this.toastr.info('El producto fue actualizado con exito!', 'Producto Actualizado!');\n          this.router.navigate(['/']);\n          this.productoForm.reset();\n        },\n        error: error => {\n          console.log(error);\n          this.productoForm.reset();\n        }*/\n      });\n    }else{\n      //creamos el producto\n      console.log(Login)\n      this._productoService.guardarProducto(Login).subscribe({\n        next: data => {\n          this.toastr.success('El producto fue registrado con exito!', 'Producto Registrado!');\n          this.router.navigate(['/']);\n        },\n        error: error => {\n          console.log(error);\n          this.productoForm.reset();\n        }\n      });\n    }\n\n    \n  }\n}\n","<div class=\"container mt-5\">\n    <div class=\"row\">\n        <div class=\"col-lg-6 offset-lg-2\">\n            <div class=\"card\">\n                <div class=\"card-body text-center\">\n                    <span class=\"titulo\">\n                    </span>\n                    <form class=\"mt-3\" [formGroup]=\"loginForm\" (ngSubmit)=\"obtenerUsuario() \">\n                        <div class=\"mb-3\">\n                            <label class=\"float-start mb-2\">Usuario:</label>\n                           <input type=\"text\" \n                            formControlName=\"usuario\"\n                            class=\"form-control form-control-lm\" \n                            placeholder=\"Usuario\">\n                            <div class=\"text-danger\" \n                            *ngIf=\"loginForm.get('usuario')?.hasError('required') && loginForm.get('usuario')?.touched \">\n                                 <span>El nombre del usuario  <strong>es obligatorio</strong></span>\n                            </div>\n                        </div>\n                        <div class=\"mb-3\">\n                            <label class=\"float-start mb-2\">Contraseña:</label>\n                            <input type=\"text\" \n                            formControlName=\"categoria\"\n                            class=\"form-control form-control-lm\" \n                            placeholder=\"Categoria\">\n                            <div class=\"text-danger\"\n                            *ngIf=\"loginForm.get('categoria')?.hasError('required') && loginForm.get('categoria')?.touched \">\n                                <span>La contraseña  <strong>es obligatorio</strong></span>\n                            </div>\n                        </div>\n                        \n                        <div class=\"mb-3\">\n                            <button routerLink=\"/\" class=\"btn btn-secondary btn-lg float-start\">Volver</button>\n                            <button [routerLink]=\"['/login',]\" type=\"submit\"  class=\"btn btn-success  btn-lg float-end\">Ingresar</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}